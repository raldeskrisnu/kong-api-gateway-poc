services:
  postgres:
    image: postgres:13
    container_name: kong-db
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    networks:
      - kong-net

  kong-migrations:
    image: kong:latest
    container_name: kong-migrations
    depends_on:
      - postgres
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
      KONG_PG_PASSWORD: "kong"
      KONG_PASSWORD: "admin"
    command: kong migrations bootstrap

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    depends_on:
      - postgres
      - kong-migrations
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
      KONG_PG_PASSWORD: "kong"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8000:8000"  # Public API Gateway
      - "8001:8001"  # Admin API (for Konga)
    networks:
      - kong-net

  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: always
    depends_on:
      - kong
    environment:
      NODE_ENV: production
      TOKEN_SECRET: "123asd123asdd"
    ports:
      - "1337:1337"
    networks:
      - kong-net

  go-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app
    restart: always
    expose:
      - "8090"
    networks:
      - kong-net
    depends_on:
      - kong

networks:
  kong-net:
    driver: bridge
